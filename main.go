package main

import (
	"fmt"
	"math"
	"time"
	"math/big"
	. "github.com/zarismine/golang_Crypto/elliptic"
)


func main(){
	p,_ := new(big.Int).SetString("10090536838212218961371399450343078071036364761025055758171211912087420349998481679269024836060487608282148940782631023492045819075301574430126088973378991",10)
	a := big.NewInt(3)
	b := big.NewInt(1)
	E := Curve(p,a,b)
	x1,_ := new(big.Int).SetString("549322916869663233419406253735559415469236688276449081913667877821921521458841441353040335536060731641581698092252428582521364950712286240682982630520968",10)
	y1,_ := new(big.Int).SetString("1743814963214384908823890799340424322262726923001487577067228092645115726610928435442675981605262257561442498400785183344563628861126101865985466444908538",10)
	x2,_ := new(big.Int).SetString("9778790566819649486704920250779035034599002283359679718376581394927299060458984489768160282640521072174435395306798421116327195532422002984543097018246156",10)
	y2,_ := new(big.Int).SetString("3708032651182118638482210012475673221863661222864838790652637733900970961400725771938503264970076708414128868795323903809616546271773353821879346647350753",10)
	P := E.SetPoint(x1,y1)
	Q := E.SetPoint(x2,y2)
	startTime := time.Now()
	fmt.Println(Bsgs(Q,P,int(math.Pow(2,40))))
	fmt.Println("Run time: ", time.Since(startTime))
}